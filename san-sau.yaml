esphome:
  name: san-sau
  friendly_name: Sân sau
  project: 
    name: Nguyên Hồ. ESP Sân sau
    version: v1.0.0 (Coding by Nguyenho)  
  on_boot:
    priority: -10
    then:
    - if:
        condition:
          lambda: 'return !id(ha_connected).state;'
        then:
          - light.turn_on: status_led
        else:
          - light.turn_off: status_led
esp32:
  board: esp32-s2-saola-1
  framework:
    type: esp-idf
logger:
  baud_rate: 0
api:
  actions:
    - action: play_rtttl
      variables:
        song_str: string
      then:
        - rtttl.play:
            rtttl: !lambda 'return song_str;'
ota:
  - platform: esphome
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: 192.168.1.2
  ap:
    ssid: "San-Sau"
    password: "Nguyen@0208"
globals:
  - id: remote_event
    type: bool
    restore_value: no
    initial_value: 'false'
captive_portal:
output:
#Status led
  - platform: gpio
    pin: 15
    inverted: True
    id: status_led_output 

#Buzzer  
  - platform: ledc
    pin: 39
    frequency: 2000 Hz
    id: rtttl_out  
# Đèn lavabo
  - platform: gpio
    pin: 1
    id: relay_1    
rtttl:
  output: rtttl_out
  id: phatnhac    
uart:
  id: uart_ld2420
  tx_pin: 33
  rx_pin: 34
  baud_rate: 115200
  parity: NONE
  stop_bits: 1

ld2420:
  uart_id: uart_ld2420   
light:
  - platform: binary
    output: status_led_output
    id: status_led
    internal: true

  - platform: binary
    output: relay_1
    name: Đèn lavabo
    id: den_lavabo       
button:
  - platform: restart
    icon: mdi:restart
    name: Restart ESP
    entity_category: "diagnostic"

  - platform: ld2420
    apply_config:
      name: Lưu thiết lập
      icon: mdi:check
    factory_reset:
      name: Factory Reset
      entity_category: "diagnostic"
      icon: mdi:restart-alert
    restart_module:
      name: Restart LD2420
      icon: mdi:restart
    revert_config:
      name: Hoàn tác thiết lập
      icon: mdi:backup-restore

sensor:
  - platform: ld2420
    moving_distance:
      name : Khoảng cách

  - platform: wifi_signal 
    name: RSSI
    id: wifi_signal_db
    entity_category: "diagnostic"
    update_interval: 300s
text_sensor:
  - platform: ld2420
    fw_version:
      name: LD2420 Firmware

  - platform: template
    name: "RF"
    id: rf_all_display
    icon: mdi:remote
    
  - platform: template
    name: "Service RTTTL"
    icon: mdi:music-clef-treble
    entity_category: "diagnostic"
    lambda: |-
      return {"play_rtttl"}; 

  - platform: wifi_info
    ip_address:
      name: IP Address
      icon: mdi:ip-network-outline    
binary_sensor:
#  Công tắc đèn
  - platform: gpio
    pin:
      number: 3
      mode: input_pullup
      inverted: True
    filters:
      - delayed_on: 10ms  
      - delayed_off: 10ms
    name: "Đèn lavabo"
    on_state:
      - light.toggle: den_lavabo
    internal: true 

  - platform: gpio
    pin:
      number: 5 
      mode: input_pullup 
      inverted: True
    filters:
      - delayed_on: 100ms  
      - delayed_off: 100ms
    name: "Bơm giếng - tay"
    on_state:
      - switch.toggle: relay_2   
    internal: true  

  - platform: gpio
    pin:
      number: 7
      mode: input_pullup 
      inverted: True
    filters:
      - delayed_on: 200ms  
      - delayed_off: 100ms
    name: "Phao bồn nước"
    icon: mdi:water-check
    on_state:
      - switch.toggle: relay_2

  - platform: gpio
    pin:
      number: 9  
      mode: input_pullup
      inverted: True
    filters:
      - delayed_on: 10ms  
      - delayed_off: 10ms
    name: "Tuỳ chỉnh 1"
    on_state:
      - logger.log: "Tuỳ chỉnh 1"  
  - platform: gpio
    pin:
      number: 11 
      mode: input_pullup
      inverted: True
    filters:
      - delayed_on: 10ms  
      - delayed_off: 10ms
    name: "Tuỳ chỉnh 2"
    on_state:
      - logger.log: "Tuỳ chỉnh 2"
  - platform: gpio
    pin:
      number: 12  
      mode: input_pullup
      inverted: True
    filters:
      - delayed_on: 10ms  
      - delayed_off: 10ms
    name: "Tuỳ chỉnh 3"
    on_state:
      - logger.log: "Tuỳ chỉnh 3"      
  
  - platform: status
    id: ha_connected
    name: "Status"
    entity_category: "diagnostic"
    on_press:
      - light.turn_on: status_led
    on_release:
      - light.turn_off: status_led

  - platform: ld2420
    has_target:
      name: Hiện diện  

select:
  - platform: ld2420
    operating_mode:
      name: Chế độ

number:
  - platform: ld2420
    presence_timeout:
      name: "Thời gian trễ (s)"
    min_gate_distance:
      name: "Ngưỡng tối thiểu (70cm/nấc)"
    max_gate_distance:
      name: "Ngưỡng tối đa (70cm/nấc)"
    # See "Number" section below for detail
    gate_select:
      name: "● Chọn vùng (70cm/nấc)"
    still_threshold:
      name: ● Ngưỡng tĩnh
    move_threshold:
      name: ● Ngưỡng chuyển động 
switch:
#Công tắc đèn
  # - platform: gpio
  #   name: "Đèn lavabo"
  #   icon: mdi:globe-light
  #   pin: 1
  #   id: relay_1
  #   restore_mode: ALWAYS_OFF     
# relay bơm
  - platform: gpio
    name: "Bơm giếng"
    icon: mdi:pump
    pin: 2
    id: relay_2
    restore_mode: ALWAYS_OFF
    on_turn_on: 
      - script.execute: beep_loop
    on_turn_off: 
      - script.stop: beep_loop
script:
  - id: reset_rf_display
    mode: restart
    then:
      - delay: 10s
      - lambda: |-
          id(rf_all_display).publish_state(""); 

  - id: beep_loop
    mode: restart
    then:
      - while:
          condition:
            switch.is_on: relay_2
          then:
            - rtttl.play: "Beep: d=10,o=5,b=150:g"
            - delay: 2s
remote_receiver:
  - id: rf_receiver   # RF Receiver
    pin:
      number: 21
      #inverted: True
      mode: 
        input: True
        #pullup: True  
    dump: rc_switch
    rmt_symbols: 64
    tolerance: 50%
    filter: 180us
    idle: 7ms
    on_rc_switch:
      then:
        - lambda: |-
            static uint64_t best_code = 0;
            static uint8_t best_bits = 0;

            uint64_t code_now = x.code;
            uint8_t bits_now = code_now == 0 ? 0 : (uint8_t)floor(log2(code_now) + 1);

            // Lưu mã dài nhất
            if (bits_now > best_bits) {
              best_bits = bits_now;
              best_code = code_now;
            }

            // Khi đủ 24 bit thì xử lý
            if (best_bits >= 24) {
              char bit_string[25];
              for (int i = 23; i >= 0; --i) {
                bit_string[23 - i] = (best_code & (1ULL << i)) ? '1' : '0';
              }
              bit_string[24] = '\0';

              // Chuỗi hiển thị
              char buffer[80];
              sprintf(buffer, "esphome.thu_rf | code: %s | code: %llu", bit_string, (unsigned long long)best_code);
              id(rf_all_display).publish_state(buffer);

              // Hẹn reset sau 10s
              id(reset_rf_display).execute();

              // Reset để nhận lần sau
              best_code = 0;
              best_bits = 0;
            }

        - lambda:
            static unsigned long last_trigger_time = 0;
            unsigned long current_time = millis();
            
            if (current_time - last_trigger_time > 500) {
              last_trigger_time = current_time;
              id(remote_event) = true;
            } else {
              id(remote_event) = false;
            }
        - if:
            condition:
              lambda: 'return id(remote_event);'
            then:
              - homeassistant.event:
                  event: esphome.thu_rf
                  data_template:
                    code: !lambda 'return x.code;'
                    protocol: !lambda 'return x.protocol;'